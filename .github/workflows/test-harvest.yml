name: harvester (test mode)

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

env:
  PG_SERVER: localhost
  PG_PORT: 5432
  PG_USER: fangorn
  PG_PASS: ent
  PG_DB: trees
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_TEST }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_TEST }}
  S3_BUCKET: ${{ secrets.AWS_S3_BUCKET_TEST }}
  OUTPUT: "True"
  MAPBOXUSERNAME: "123"
  MAPBOXTOKEN: "456"
  MAPBOXTILESET: "xyz"
  MAPBOXLAYERNAME: "abc"
  LOGGING: INFO
  DATABASE_URL: postgresql://fangorn:ent@localhost:5432/trees?schema=public

jobs:
  test-harvest:
    runs-on: ubuntu-20.04
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    services:
      postgres:
        image: postgis/postgis:11-2.5-alpine
        env:
          POSTGRES_USER: fangorn
          POSTGRES_DB: trees
          POSTGRES_PASSWORD: ent
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Get the source
        uses: actions/checkout@v3
      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Get giessdenkiez-de-postgres-api
        run: git clone https://github.com/technologiestiftung/giessdenkiez-de-postgres-api.git api
      - name: install node dependencies
        run: cd api && npm ci
      - name: prisma db push
        run: cd api && npm run prisma:push:dangerously
      - name: prisma db seed
        run: cd api && npm run prisma:seed:dangerously
      - name: build the harvester
        run: cd harvester && docker build --tag technologiestiftung/giessdenkiez-de-dwd-harvester:test .
      - name: run the harvester
        run: docker run --env PG_SERVER='0.0.0.0' --env PG_DB --env PG_PORT --env PG_USER --env PG_PASS --env AWS_SECRET_ACCESS_KEY --env AWS_ACCESS_KEY_ID --env S3_BUCKET="${{ secrets.S3_BUCKET_TEST }}" --env MAPBOXTOKEN --env MAPBOXUSERNAME --env LOGGING --env OUTPUT --network host technologiestiftung/giessdenkiez-de-dwd-harvester:test
